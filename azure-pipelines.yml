trigger:
  branches:
    include: ['master', 'v2-dev']
  tags:
    include: ['*']

jobs:
- job: cargo_test
  strategy:
    matrix:
      Linux:
        vmImage: ubuntu-18.04
      MacOS:
        vmImage: macOS-10.14
      Windows:
        vmImage: windows-2019
  pool:
    vmImage: $(vmImage)
  steps:
    # Linux and macOS.
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      env:
        RUSTUP_TOOLCHAIN: stable
      displayName: "Install rust (*nix)"
      condition: not(eq(variables['Agent.OS'], 'Windows_NT'))

    # Windows.
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      env:
        RUSTUP_TOOLCHAIN: stable
      displayName: "Install rust (windows)"
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - script: |
        set -e
        echo "Rust up version"
        rustup -V
        echo "rustup installed commponents list"
        rustup component list --installed
        echo "rustup show:"
        rustup show
        echo "rustc -Vv"
        rustc -Vv
        echo "cargo -V"
        cargo -V
      displayName: Query rustup, rust and cargo versions

    - script: cargo test
      displayName: cargo test
  